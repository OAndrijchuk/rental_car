{"version":3,"file":"static/js/786.716dce57.chunk.js","mappings":"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","sources":["components/CarCard/CarCard.jsx","pages/Catalog/Catalog.styled.js","pages/Favorites/Favorites.styled.js","pages/Favorites/Favorites.jsx","redux/adverts/selectors.js"],"sourcesContent":["import { SpriteSVG } from 'pictures/SVG/SpriteSVG';\nimport React from 'react';\nimport {\n  CardContainer,\n  CardInfo,\n  DetailsBtn,\n  HeartBtn,\n  Img,\n  ImportentInfo,\n  Li,\n} from './CarCard.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { favoritesAdvertsSelector } from 'redux/adverts/selectors';\nimport {\n  addToFavoritesAdverts,\n  removeFromFavoritesAdverts,\n} from 'redux/adverts/advertsSlice';\nimport { fetchCarDetails } from 'redux/carDetails/operations';\nimport { modalOpen } from 'redux/carDetails/carDetailsSlice';\nimport { combineInfoProperty } from 'helpers/helpers_func';\n\nconst CarCard = ({ carInfo }) => {\n  let {\n    img,\n    make,\n    id,\n    year,\n    model,\n    type,\n    rentalPrice,\n    address,\n    rentalCompany,\n    functionalities,\n  } = carInfo;\n\n  const dispatch = useDispatch();\n  const favoritesAdverts = useSelector(favoritesAdvertsSelector);\n\n  const isFavorit = favoritesAdverts.find(el => el.id === id);\n  const newAdress = address.split(',');\n\n  const toggleFavorites = () => {\n    if (isFavorit) {\n      dispatch(removeFromFavoritesAdverts(carInfo));\n    } else {\n      dispatch(addToFavoritesAdverts(carInfo));\n    }\n  };\n\n  const createFirstLine = str => {\n    if (str.length <= 45) {\n      return (str += ' | Premium');\n    } else {\n      return str;\n    }\n  };\n\n  const createSecondLine = (str, arr) => {\n    const elemMaxLengs = 46 - str.length;\n    const text = arr.find(e => e.length <= elemMaxLengs);\n    if (text) {\n      return (str += ` | ${text}`);\n    } else {\n      return str;\n    }\n  };\n\n  const firstLine = createFirstLine(\n    combineInfoProperty(newAdress[1], newAdress[2], rentalCompany)\n  );\n\n  const secondLine = createSecondLine(\n    combineInfoProperty(type, model, id),\n    functionalities\n  );\n\n  if (\n    make.length + model.length + year.toString().length > 20 ||\n    make.length > 5 ||\n    model.length > 7\n  ) {\n    model = null;\n  }\n\n  return (\n    <Li>\n      <HeartBtn type=\"button\" $isFavorit={isFavorit} onClick={toggleFavorites}>\n        <SpriteSVG name=\"heart\" />\n      </HeartBtn>\n      <CardContainer>\n        <Img\n          src={\n            img\n              ? img\n              : 'https://www.carhuddle.com/images/default/car-default.jpg'\n          }\n          alt={make}\n          width=\"274\"\n          height=\"268\"\n        />\n\n        <ImportentInfo>\n          <span>\n            <span>\n              {make}\n              {model && ' '}\n            </span>\n            <span className=\"model\">{model}</span>\n            <span>,&#32;{year}</span>\n          </span>\n          <span>{rentalPrice}</span>\n        </ImportentInfo>\n        <CardInfo>\n          <p>{firstLine}</p>\n          <p>{secondLine}</p>\n        </CardInfo>\n      </CardContainer>\n      <DetailsBtn\n        type=\"button\"\n        onClick={() => {\n          dispatch(fetchCarDetails(id));\n          dispatch(modalOpen());\n        }}\n      >\n        Learn more\n      </DetailsBtn>\n    </Li>\n  );\n};\n\nexport default CarCard;\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  /* width: fit-content; */\n  margin: 50px auto;\n  gap: 50px 28px;\n  width: 274px;\n\n  @media screen and (min-width: 608px) {\n    width: 578px;\n  }\n  @media screen and (min-width: 908px) {\n    width: 878px;\n  }\n  @media screen and (min-width: 1210px) {\n    width: 1180px;\n  }\n`;\nexport const LoadMoreBtn = styled.button`\n  display: block;\n  margin: 50px auto;\n  color: ${({ theme }) => theme.colors.colorBtn};\n  padding: 10px;\n  font-family: 'Manrope', sans-serif;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 1.5; /* 150% */\n  text-decoration-line: underline;\n  transition: all 250ms ease;\n  &:hover {\n    transform: scale(1.2);\n    color: ${({ theme }) => theme.colors.hover};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const EmtyListTitle = styled.h2`\n  text-align: center;\n  margin-top: 50px;\n  padding: 0 20%;\n  line-height: 1.5;\n`;\n","import CarCard from 'components/CarCard/CarCard';\nimport { Ul } from 'pages/Catalog/Catalog.styled';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { favoritesAdvertsSelector } from 'redux/adverts/selectors';\nimport { GlobalContainer } from 'style/global';\nimport { EmtyListTitle } from './Favorites.styled';\n\nfunction Favorites() {\n  const favoritesAdverts = useSelector(favoritesAdvertsSelector);\n  return (\n    <section>\n      <GlobalContainer>\n        {favoritesAdverts.length ? (\n          <Ul>\n            {favoritesAdverts.map(car => (\n              <CarCard carInfo={car} key={car.id} />\n            ))}\n          </Ul>\n        ) : (\n          <EmtyListTitle>\n            Here you will see cars that you liked, but you haven't selected any\n            yet. Choose the cars you like and come back.\n          </EmtyListTitle>\n        )}\n      </GlobalContainer>\n    </section>\n  );\n}\n\nexport default Favorites;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const advertsSelector = createSelector(\n  [state => state.adverts],\n  adverts => adverts.adverts\n);\nexport const favoritesAdvertsSelector = createSelector(\n  [state => state.adverts],\n  adverts => adverts.favoritesAdverts\n);\n"],"names":["_ref","str","carInfo","img","make","id","year","model","type","rentalPrice","address","rentalCompany","functionalities","dispatch","useDispatch","isFavorit","useSelector","favoritesAdvertsSelector","find","el","newAdress","split","firstLine","combineInfoProperty","length","secondLine","arr","elemMaxLengs","text","e","concat","createSecondLine","toString","_jsxs","Li","children","_jsx","HeartBtn","$isFavorit","onClick","removeFromFavoritesAdverts","addToFavoritesAdverts","SpriteSVG","name","CardContainer","Img","src","alt","width","height","ImportentInfo","className","CardInfo","DetailsBtn","fetchCarDetails","modalOpen","Ul","styled","ul","_templateObject","_taggedTemplateLiteral","LoadMoreBtn","button","_templateObject2","theme","colors","colorBtn","_ref2","hover","EmtyListTitle","h2","favoritesAdverts","GlobalContainer","map","car","CarCard","advertsSelector","createSelector","state","adverts"],"sourceRoot":""}